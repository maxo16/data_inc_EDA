map_kitty
source('~/Dropbox/Data Incubator/Application challenge/data_inc_EDA/map_helper.R')
source('~/Dropbox/Data Incubator/Application challenge/data_inc_EDA/map_helper.R')
rm(ba_bgs)
rm(population_data_bgs)
rm(map_kitty)
rm(sf_311_kitty)
sf_311_kitty <- kitty_finder(1)
map_kitty <- source("map_helper.R")
rm(p7)
# Debugging lines
rm(ba_bgs)
rm(population_data_bgs)
rm(sf_311_kitty)
source('~/Dropbox/Data Incubator/Application challenge/data_inc_EDA/map_helper.R')
sf_311_kitty <- kitty_finder(1)
sf_311_kitty <- kitty_finder(1)
source('~/Dropbox/Data Incubator/Application challenge/data_inc_EDA/map_helper.R')
map_kitty
source("column_helper.R")
column_kitty
sf_311_kitty <- kitty_finder(1)
source("histo_helper.R")
hist_kitty
source("column_helper.R")
column_kitty
map_kitty <- source("map_helper.R")
map_kitty
class(map_kitty)
class(map_kiy)
library(htmlwidgets)
map_kitty
class(map_kitty)
sf_311_kitty <- kitty_finder(1)
source("map_helper.R")
map_kitty
saveWidget(m, file="map_1.html")
saveWidget(map_kitty, file="map_1.html")
save(map_kitty, file = "map1.RData")
load("map1.RData")
map_kitty
View(map_kitty)
library(leaflet)
load("map1.RData")
map_kitty
ba_bgs <- st_read("/Users/max/Dropbox/Stanford Stuff/Classes/PUBLPOL/Y23 Spring 2020/Thesis/Data/sf_bay_clipped/2e262912-207a-4424-9e17-08041688d59c202044-1-130emnv.fypm.shp")
population_data_bgs <- read_csv("/Users/max/Dropbox/Stanford Stuff/Classes/PUBLPOL/Y23 Spring 2020/Thesis/Data/population_data_bgs.csv")
ba_bgs <- ba_bgs[,c(6,10)] #Don't really need the id's but may as well keep them so I have a unique identifier for each row.
ba_bgs <- ba_bgs %>% mutate(geoid_long = paste("1500000US", blkgrpid, sep = ""))
ba_bgs <- ba_bgs[,c(2,3)]
# This is where it filters to just block groups in SF, I'll just keep this and rename things accordingly.
ba_bgs <- ba_bgs %>% filter(geoid_long %in% population_data_bgs$id)
# Creation of sf_311_kitty as sf
# Making the sf object from the data.table
sf_311_kitty <- st_as_sf(sf_311_kitty, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
# Doing the spatial join to get block group data to each call
sf_311_kitty <- st_join(sf_311_kitty, ba_bgs["geoid_long"])
# Join it back to the bgs then plot. Have to join it to the sf object,
sf_311_kitty_summary <- ba_bgs %>% left_join(as.data.frame(sf_311_kitty_summary)[,1:2], by = "geoid_long")
# Creating the color palette
binpal <- colorBin("Oranges", sf_311_kitty_summary$calls_bg, 9, pretty = FALSE)
# Summary data frame is what contains information on calls per block and that's what eventually gets mapped.
sf_311_kitty_summary <- sf_311_kitty %>% group_by(geoid_long) %>% summarize("calls_bg" = n())
# This did the trick.
sf_311_kitty_summary <-  sf_311_kitty_summary %>% drop_na(calls_bg)
# Summary data frame is what contains information on calls per block and that's what eventually gets mapped.
sf_311_kitty_summary <- sf_311_kitty %>% group_by(geoid_long) %>% summarize("calls_bg" = n())
View(sf_311_kitty)
sf_311_kitty <- kitty_finder(1)
source('~/Dropbox/Data Incubator/Application challenge/data_inc_EDA/map_helper2.R')
# The actual mapping part.
map_kitty <- leaflet(sf_311_kitty_summary) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~binpal(calls_bg), popup = ~htmlEscape(calls_bg)) %>%
addLegend("bottomright", pal = binpal, values = ~calls_bg,
title = "Total Calls Per Block",
opacity = 1
) %>% setView(lng =-122.44, lat = 37.758, zoom = 13)
map_kitty
library(tmap)
install.packages("tmap")
library(tmap)
tm_shape(sf_311_kitty_summary) + tm_polygons("calls_bg", style = "quantile")
tmap_mode("view")
tm_shape(sf_311_kitty_summary) + tm_polygons("calls_bg", style = "quantile")
library(data.table)
library(dplyr)
library(treemap)
library(sf)
library(readr)
library(leaflet)
library(lubridate)
library(htmltools)
library(ggplot2)
library(ggthemes)
library(tidyverse)
library(htmlwidgets)
library(tmap)
sf_311_kitty <- kitty_finder(1)
source('~/Dropbox/Data Incubator/Application challenge/data_inc_EDA/map_helper2.R')
map_kitty
sf_311_kitty <- kitty_finder(1)
source("map_helper2.R")
map_kitty
source("map_helper2.R")
map_kitty
map_kitty
class(map_kitty)
map_kitty <- tm_shape(sf_311_kitty_summary) + tm_polygons("calls_bg", style = "quantile")
map_kitty
rm(map_kitty)
# The actual mapping part.
# tmap_mode("view")
map_kitty <- tm_shape(sf_311_kitty_summary) + tm_polygons("calls_bg", style = "quantile")
map_kitty
# The actual mapping part.
tmap_mode()
?tmap_mode
# The actual mapping part.
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary) + tm_polygons("calls_bg", style = "quantile")
# The actual mapping part.
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary) + tm_polygons("calls_bg", style = "quantile")
map_kitty <- tm_shape(sf_311_kitty_summary) + tm_polygons("calls_bg", style = "quantile")
map_kitty
plot(map_kitty)
source("map_helper2.R")
map_kitty
sf_311_kitty <- kitty_finder(1)
source("map_helper2.R")
map_kitty
sf_311_kitty <- kitty_finder(1)
sf_311_kitty <- kitty_finder(1)
rm(sf_kitty_summary)
rm(sf_311_kitty_summary)
sf_311_kitty <- kitty_finder(1)
sf_311_kitty_summary1 <- source("map_helper2.R")
View(sf_311_kitty_summary)
class(sf_311_kitty_summary1$value)
sf_311_kitty_summary1 <- sf_311_kitty_summary1$value
# The actual mapping part.
map_kitty <- leaflet(sf_311_kitty_summary) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~binpal(calls_bg), popup = ~htmlEscape(calls_bg)) %>%
addLegend("bottomright", pal = binpal, values = ~calls_bg,
title = "Total Calls Per Block",
opacity = 1
) %>% setView(lng =-122.44, lat = 37.758, zoom = 13)
map_kitty
# The actual mapping part.
map_kitty <- leaflet(sf_311_kitty_summary1) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~binpal(calls_bg), popup = ~htmlEscape(calls_bg)) %>%
addLegend("bottomright", pal = binpal, values = ~calls_bg,
title = "Total Calls Per Block",
opacity = 1
) %>% setView(lng =-122.44, lat = 37.758, zoom = 13)
map_kitty
# The actual mapping part.
# tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", style = "quantile")
map_kitty
head(sf_311_kitty_summary1)
save(sf_311_kitty_summary1, "map1_data.RData")
save(sf_311_kitty_summary1, file = "map1_data.RData")
rm(sf_311_kitty_summary1)
load("map1_data.RData")
# The actual mapping part.
map_kitty <- leaflet(sf_311_kitty_summary1) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~binpal(calls_bg), popup = ~htmlEscape(calls_bg)) %>%
addLegend("bottomright", pal = binpal, values = ~calls_bg,
title = "Total Calls Per Block",
opacity = 1
) %>% setView(lng =-122.44, lat = 37.758, zoom = 13)
map_kitty
head(sf_311_kitty_summary1)
sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", style = "quantile")
map_kitty
map_kitty
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", style = "quantile") + tm_basemap(server = "OpenTopoMap")
map_kitty
install.packages("mapview")
library(mapview)
mapview(sf_311_kitty_summary1)
?mapview
mapview(sf_311_kitty_summary1, zcol = "calls_bg")
sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", style = "quantile") + tm_basemap(server = "OpenTopoMap")
map_kitty
sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", style = "quantile", breaks = c(0,1000,2000,4000,6000,80000,10000,31000))
map_kitty
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", style = "quantile", breaks = c(0,1000,2000,4000,6000,80000,10000,31000))
map_kitty
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", breaks = c(0,1000,2000,4000,6000,80000,10000,31000))
map_kitty
sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", style = "quantile")
map_kitty
sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", n = 10)
map_kitty
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", n = 8)
map_kitty
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", style = "order")
map_kitty
names(sf_311_kitty_summary1)
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per Block Group"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("calls_bg", style = "order")
map_kitty
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per Block Group"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per Block Group", style = "order")
map_kitty
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per BG"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per BG", style = "order")
map_kitty
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per BG"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.width = 1, legend.height = 1)
map_kitty
sf_311_kitty <- kitty_finder(2)
sf_311_kitty_summary2 <- source("map_helper2.R")$value
save(sf_311_kitty_summary2, file = "map2_data.RData")
sf_311_kitty <- kitty_finder(3)
sf_311_kitty_summary3 <- source("map_helper2.R")$value
save(sf_311_kitty_summary3, file = "map3_data.RData")
sf_311_kitty <- kitty_finder(4)
sf_311_kitty_summary4 <- source("map_helper2.R")$value
save(sf_311_kitty_summary4, file = "map4_data.RData")
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per BG"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 2,
legend.text.size = 1)
map_kitty
sf_311_kitty <- kitty_finder(4)
source("histo_helper.R")
hist_kitty
# Chunk 1
library(data.table)
library(dplyr)
library(treemap)
library(sf)
library(readr)
library(leaflet)
library(lubridate)
library(htmltools)
library(ggplot2)
library(ggthemes)
library(tidyverse)
source("cat_selector.R")
library(tmap)
library(mapview)
# Chunk 2: prep chunk
# opts_chunk$set(cache=TRUE)
sf_311 <- fread("/Users/max/Dropbox/Data Incubator/311_Cases.csv")
sf_311 <- sf_311[,1:20]
#Let me see if I can't get it to work with the dates as is.
mdy_hms(sf_311$Opened[1:10], tz = "US/Pacific")
sf_311$Opened <- mdy_hms(sf_311$Opened, tz = "US/Pacific")
sf_311$Closed <- mdy_hms(sf_311$Closed, tz = "US/Pacific")
# I'll do abbreviations since the dayss could get a little crowded on the charts and there shouldn't be any ambiguity.
sf_311 <- sf_311 %>% mutate(Closed_wday = wday(Closed, label = TRUE, abbr = TRUE))
# Want to do open because that's when the calls come in.
sf_311 <- sf_311 %>% mutate(Opened_wday = wday(Opened, label = TRUE, abbr = TRUE))
# Looks like the tidyverse solutions might be slower, sometimes, they're definitely faster at other times. However, I think the tradeoff in the easier syntax is worth it, though.
sf_311 <- sf_311 %>% drop_na(Closed)
# Filter out coordinates that are clearly wrong.
sf_311 <- sf_311 %>% filter(Longitude >= -123 & Longitude <= -122 & Latitude >= 37.7 & Latitude <= 38)
# Lesson learned is, when doing something, search for a tidyverse solution.
summary_by_category <- sf_311 %>% group_by(Category) %>% summarize("category_summary" = n())
summary_by_category <- summary_by_category %>% arrange(-category_summary)
summary_by_category <- summary_by_category %>% mutate(pct_of_total = (category_summary/sum(category_summary))*100, cumpct = cumsum(pct_of_total))
# Chunk 3
treemap(summary_by_category, index = "Category", vSize = "pct_of_total", type = "index", title = "")
# Chunk 4
# Tree map of top 10
treemap(summary_by_category[1:10,], index = "Category", vSize = "pct_of_total", type = "index", title = "")
# Chunk 5
summary_table <- summary_by_category[1:4,]
names(summary_table)[2:4] <- c("Number of Calls", "Percent of Total", "Cumulative Percent")
kable(summary_table, digits = 0, format.args = list(big.mark = ",",
scientific = FALSE))
# Chunk 6
sf_311_kitty <- kitty_finder(1)
source("histo_helper.R")
hist_kitty
# Chunk 7
source("column_helper.R")
column_kitty
# Chunk 8
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per BG"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
legend.text.size = 2)
map_kitty
# Chunk 9
sf_311_kitty <- kitty_finder(2)
source("histo_helper.R")
hist_kitty
# Chunk 10
source("column_helper.R")
column_kitty
# Chunk 11
# sf_311_kitty <- kitty_finder(1)
load("map2_data.RData")
names(sf_311_kitty_summary2)[2] <- "Calls Per BG"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary2) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
legend.text.size = 2)
map_kitty
# Chunk 12
sf_311_kitty <- kitty_finder(3)
source("histo_helper.R")
hist_kitty
# Chunk 13
source("column_helper.R")
column_kitty
# Chunk 14
# sf_311_kitty <- kitty_finder(1)
load("map3_data.RData")
names(sf_311_kitty_summary3)[2] <- "Calls Per BG"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary3) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
legend.text.size = 2)
map_kitty
# Chunk 15
sf_311_kitty <- kitty_finder(4)
source("histo_helper.R")
hist_kitty
# Chunk 16
source("column_helper.R")
column_kitty
# Chunk 17
# sf_311_kitty <- kitty_finder(1)
load("map4_data.RData")
names(sf_311_kitty_summary4)[2] <- "Calls Per BG"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary4) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
legend.text.size = 2)
map_kitty
sf_311_kitty <- kitty_finder(4)
source("histo_helper.R")
hist_kitty
sf_311_kitty <- kitty_finder(4)
source("histo_helper.R")
hist_kitty
sf_311_kitty <- kitty_finder(1)
source("histo_helper.R")
hist_kitty
sf_311_kitty <- kitty_finder(1)
source("histo_helper.R")
hist_kitty
sf_311_kitty <- kitty_finder(1)
source("histo_helper.R")
hist_kitty
sf_311_kitty <- kitty_finder(1)
source("histo_helper.R")
hist_kitty
source('~/Dropbox/Data Incubator/Application challenge/data_inc_EDA/histo_helper.R')
hist_kitty
sf_311_kitty <- kitty_finder(1)
source("histo_helper.R")
hist_kitty
library(ggmap)
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per BG"
# tmap_mode("plot")
# map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
#           legend.text.size = 2)
# map_kitty
sf_basemap <- get_stamenmap(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'terrain-background', source = 'stamen')
ggmap(sf_basemap)
install.packages("gridExtra")
library(gridExtra)
sf_basemap <- get_stamenmap(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'terrain-background', source = 'stamen')
sf_basemap <- ggmap::get_stamenmap(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'terrain-background', source = 'stamen')
library(ggmap)
install.packages("ggmap")
sf_basemap <- get_stamenmap(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'terrain-background', source = 'stamen')
library(ggmap)
sf_basemap <- get_stamenmap(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'terrain-background', source = 'stamen')
ggmap(sf_basemap)
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per BG"
# tmap_mode("plot")
# map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
#           legend.text.size = 2)
# map_kitty
sf_basemap <- get_stamenmap(location=c(lat = -122.4385, lon = 37.76489), zoom=11, maptype = 'terrain-background', source = 'stamen')
ggmap(sf_basemap)
?get_stamenmap
?get_map
sf_basemap <- get_map(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'terrain-background', source = 'stamen')
sf_basemap <- get_map(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'terrain-background', source = 'osm')
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per BG"
# tmap_mode("plot")
# map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
#           legend.text.size = 2)
# map_kitty
sf_basemap <- get_map(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'toner', source = 'stamen')
ggmap(sf_basemap)
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per BG"
# tmap_mode("plot")
# map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
#           legend.text.size = 2)
# map_kitty
sf_basemap <- get_map(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'toner', source = 'stamen')
ggmap(sf_basemap)
sf_basemap <- get_map(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'toner', source = 'stamen')
# sf_311_kitty <- kitty_finder(1)
load("map1_data.RData")
names(sf_311_kitty_summary1)[2] <- "Calls Per BG"
# tmap_mode("plot")
# map_kitty <- tm_shape(sf_311_kitty_summary1) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
#           legend.text.size = 2)
# map_kitty
sf_basemap <- get_map(location=c(lon = -122.4385, lat = 37.76489), zoom=11, maptype = 'toner', source = 'osm')
ggmap(sf_basemap)
sf_basemap <- get_stamenmap( bbox = c(left = -123, bottom = 37, right = -122, top = -38), zoom = 8, maptype = "watercolor")
ggmap(sf_basemap)
map_kitty
range(sf_311$Opened)
sf_311 <- fread("/Users/max/Dropbox/Data Incubator/311_Cases.csv")
sf_311 <- sf_311[,1:20]
range(sf_311$Opened)
#Let me see if I can't get it to work with the dates as is.
mdy_hms(sf_311$Opened[1:10], tz = "US/Pacific")
sf_311$Opened <- mdy_hms(sf_311$Opened, tz = "US/Pacific")
sf_311$Closed <- mdy_hms(sf_311$Closed, tz = "US/Pacific")
# I'll do abbreviations since the dayss could get a little crowded on the charts and there shouldn't be any ambiguity.
sf_311 <- sf_311 %>% mutate(Closed_wday = wday(Closed, label = TRUE, abbr = TRUE))
# Want to do open because that's when the calls come in.
sf_311 <- sf_311 %>% mutate(Opened_wday = wday(Opened, label = TRUE, abbr = TRUE))
# Looks like the tidyverse solutions might be slower, sometimes, they're definitely faster at other times. However, I think the tradeoff in the easier syntax is worth it, though.
sf_311 <- sf_311 %>% drop_na(Closed)
# Filter out coordinates that are clearly wrong.
sf_311 <- sf_311 %>% filter(Longitude >= -123 & Longitude <= -122 & Latitude >= 37.7 & Latitude <= 38)
range(sf_311$Opened)
# Lesson learned is, when doing something, search for a tidyverse solution.
summary_by_category <- sf_311 %>% group_by(Category) %>% summarize("category_summary" = n())
summary_by_category <- summary_by_category %>% arrange(-category_summary)
summary_by_category <- summary_by_category %>% mutate(pct_of_total = (category_summary/sum(category_summary))*100, cumpct = cumsum(pct_of_total))
length(unique(sf_311$Category))
# Lesson learned is, when doing something, search for a tidyverse solution.
summary_by_category <- sf_311 %>% group_by(Category) %>% summarize("category_summary" = n())
summary_by_category <- summary_by_category %>% arrange(-category_summary)
summary_by_category <- summary_by_category %>% mutate(pct_of_total = (category_summary/sum(category_summary))*100, cumpct = cumsum(pct_of_total))
View(summary_by_category)
# sf_311_kitty <- kitty_finder(1)
load("map2_data.RData")
names(sf_311_kitty_summary2)[2] <- "Calls Per BG"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary2) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
legend.text.size = 2)
map_kitty
sf_311_kitty <- kitty_finder(3)
source("histo_helper.R")
hist_kitty
source("column_helper.R")
column_kitty
# sf_311_kitty <- kitty_finder(1)
load("map3_data.RData")
names(sf_311_kitty_summary3)[2] <- "Calls Per BG"
tmap_mode("plot")
map_kitty <- tm_shape(sf_311_kitty_summary3) + tm_polygons("Calls Per BG", style = "order") + tm_layout(legend.title.size = 3,
legend.text.size = 2)
map_kitty
rm(list = ls())
